var search_data = {"index":{"searchIndex":["moviedata","movietest","viewerinfo","mean()","movies()","new()","new()","new()","predict()","rating()","read()","rms()","run_test()","stdv()","to_a()","viewers()","readme"],"longSearchIndex":["moviedata","movietest","viewerinfo","movietest#mean()","moviedata#movies()","moviedata::new()","movietest::new()","viewerinfo::new()","moviedata#predict()","moviedata#rating()","moviedata#read()","movietest#rms()","moviedata#run_test()","movietest#stdv()","movietest#to_a()","moviedata#viewers()",""],"info":[["MovieData","","MovieData.html","",""],["MovieTest","","MovieTest.html","","<p>class MovieTest to test the predction alogrithem\n"],["ViewerInfo","","ViewerInfo.html","","<p>class to save the viewer information\n"],["mean","MovieTest","MovieTest.html#method-i-mean","()","<p>return the average of the error predction\n"],["movies","MovieData","MovieData.html#method-i-movies","(u)","<p>\n\n<pre>retun the array of movies that user u watches</pre>\n"],["new","MovieData","MovieData.html#method-c-new","(folder_name, file_name=nil)","<p>the constuctor will call method read to intilize the training set and\ntesting set\n"],["new","MovieTest","MovieTest.html#method-c-new","(movie=nill)","<p>constructor to intlize the movie_test varabile\n"],["new","ViewerInfo","ViewerInfo.html#method-c-new","(user_id=nil, movie_id=nil,moive_rating=0,movie_predict=0)",""],["predict","MovieData","MovieData.html#method-i-predict","(u,m)","<p>+=========================================\n\n<pre>return the program rating predict for movie m by user u</pre>\n"],["rating","MovieData","MovieData.html#method-i-rating","(u,m)","\n<pre>return the rate that user u give to movie m\nit will return 0 if user did not rate</pre>\n<p>\n"],["read","MovieData","MovieData.html#method-i-read","(file_name)","<p>\n\n<pre>read the file and return either a testing or training set</pre>\n"],["rms","MovieTest","MovieTest.html#method-i-rms","()","<p>return the root mean square error of the predection\n"],["run_test","MovieData","MovieData.html#method-i-run_test","(k=0)","<p>\n\n<pre>run the test for k or the whole test_set</pre>\n"],["stdv","MovieTest","MovieTest.html#method-i-stdv","()","<p>return the satander deviation of the error\n"],["to_a","MovieTest","MovieTest.html#method-i-to_a","()","<p>return an array of the prediction in the form [u , m, r, p]\n"],["viewers","MovieData","MovieData.html#method-i-viewers","(m)","<p>\n\n<pre>return the array of users who watches movie m</pre>\n"],["README","","ml-100k/README.html","","<p>SUMMARY &amp; USAGE LICENSE\n<p>\n<p>MovieLens data sets were collected by the GroupLens Research Project at the\n...\n"]]}}